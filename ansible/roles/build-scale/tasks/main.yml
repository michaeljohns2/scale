---
# build-scale/tasks/main.yml
- name: Build scale docker image
  tags: [ build-scale, build-scale-docker ]
  docker_image:
    path: "{{ scale_build_root }}"
    name: "geoint/scale"
    tag: "{{ scale_docker_version }}"
    state: build
  notify:
    - push scale

- name: Build scale-web-static docker image
  tags: [ build-scale, build-scale-docker ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/framework/scale-web-static"
    name: "geoint/scale-web-static"
    tag: "{{ scale_docker_version }}"
    state: build
  notify:
    - push scale-web-static

- name: Install git
  tags: common
  yum: name=git
  become: true

- name: Download golang
  tags: [ build-scale, build-scale-cli ]
  get_url: url=https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz dest=/tmp/ mode=0666

- name: Install golang
  tags: [ build-scale, build-scale-cli ]
  unarchive: src=/tmp/go1.6.2.linux-amd64.tar.gz dest=/usr/local/ copy=no
  become: true

- name: Setup go links
  tags: [ build-scale, build-scale-cli ]
  file: src='/usr/local/go/bin/go' dest='/usr/bin/go' state=link
  become: true

- name: Download glide
  tags: [ build-scale, build-scale-cli ]
  get_url: url=https://github.com/Masterminds/glide/releases/download/0.10.2/glide-0.10.2-linux-386.tar.gz dest=/tmp/ mode=0666

- name: Unpack glide
  tags: [ build-scale, build-scale-cli ]
  unarchive: src=/tmp/glide-0.10.2-linux-386.tar.gz dest=/tmp/ copy=no

- name: Install glide
  tags: [ build-scale, build-scale-cli ]
  command: "install -m 0755 /tmp/linux-386/glide /usr/bin/"
  become: true

- name: Setup go src
  tags: [ build-scale, build-scale-cli ]
  file: path='{{ scale_build_root }}/src/github.com/ngageoint' state=directory
  become: true

- name: Setup GOPATH
  tags: [ build-scale, build-scale-cli ]
  file: src='{{ scale_build_root }}' dest='{{ scale_build_root }}/src/github.com/ngageoint/scale' state=link
  become: true

- name: Grab dependencies
  tags: [ build-scale, build-scale-cli ]
  command: /usr/bin/glide install -u chdir='{{ scale_build_root }}/src/github.com/ngageoint/scale/scale-cli'
  environment:
    GOROOT: '/usr/local/go'
    GOPATH: '{{ scale_build_root }}'

- name: Build cli
  tags: [ build-scale, build-scale-cli ]
  command: go install github.com/ngageoint/scale/scale-cli/cmd/goscale creates='{{ scale_build_root }}/bin/goscale'
  environment:
    GOROOT: '/usr/local/go'
    GOPATH: '{{ scale_build_root }}'

- name: Build landsat-base docker image
  tags: [ build-scale, build-examples ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/examples/landsat-base"
    name: "landsat-base"
    tag: "{{ example_image_tag }}"
    state: build
  notify:
    - push landsat-base

- name: Build landsat-parse docker image
  tags: [ build-scale, build-examples ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/examples/landsat-parse"
    name: "landsat-parse"
    tag: "{{ example_image_tag }}"
    state: build
  notify:
    - push landsat-parse

- name: Build landsat-ndwi docker image
  tags: [ build-scale, build-examples ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/examples/landsat-ndwi"
    name: "landsat-ndwi"
    tag: "{{ example_image_tag }}"
    state: build
  notify:
    - push landsat-ndwi

- name: Build landsat-tiles docker image
  tags: [ build-scale, build-examples ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/examples/landsat-tiles"
    name: "landsat-tiles"
    tag: "{{ example_image_tag }}"
    state: build
  notify:
    - push landsat-tiles

- name: Build pca docker image
  tags: [ build-scale, build-examples ]
  docker_image:
    path: "{{ scale_build_root }}/dockerfiles/examples/pca"
    name: "pca"
    tag: "{{ example_image_tag }}"
  notify:
    - push pca

- name: Build ace docker image
  tags: [ build-scale, build-examples ]
  command: /scale/bin/goscale jobs commit -p chdir="{{ scale_build_root }}/dockerfiles/examples/ace"
  environment:
    DOCKER_REGISTRY: "{{ docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'

- name: Build tad docker image
  tags: [ build-scale, build-examples ]
  command: /scale/bin/goscale jobs commit -p chdir="{{ scale_build_root }}/dockerfiles/examples/tad"
  environment:
    DOCKER_REGISTRY: "{{ docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'

- name: Build jpl-signatures docker image
  tags: [ build-scale, build-examples ]
  command: /scale/bin/goscale jobs commit -p chdir="{{ scale_build_root }}/dockerfiles/examples/jpl-signatures"
  environment:
    DOCKER_REGISTRY: "{{ docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'

- name: Build parse-binary docker image
  tags: [ build-scale, build-examples ]
  command: /scale/bin/goscale jobs commit -p chdir="{{ scale_build_root }}/dockerfiles/examples/binary-parse"
  environment:
    DOCKER_REGISTRY: "{{ docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'

- name: Build vash docker image
  tags: [ build-scale, build-examples ]
  command: /scale/bin/goscale jobs commit -p chdir="{{ scale_build_root }}/dockerfiles/examples/vash"
  environment:
    DOCKER_REGISTRY: "{{ docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'
